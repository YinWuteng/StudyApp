1.java中==和equals和hashCode的区别
  “==”运算符用来比较两个变量的值是否相等。
   equals用来比较两个对象是否相等。
   hashCode方法只有在集合中用到。
2.各基本类型所占字节
   bool 8位1个字节，byte 8位 1字节
   char 16位 2字节 short 16位 2字节
   int 32位4个字节，float 32位4字节，
   double 64位8个字节  long 64位 8字节
3.int和integer区别
   int是基本类型，直接存数值，初始变量为0；
   integer是对象，初始化为null。
4.类与对象的区别
   类是对某一类事物的描述，是抽象的，而对象是一个实实在在的个体，是类的一个实例。
5.谈谈对多肽的理解
  定义：指允许不同类的对象对同一消息做出响应，即同一消息可以根据发送对象的不同而采取多种不同的行为方式；
  作用：消除类型之间的耦合关系；
  必要条件：有继承，有重写，父类引用指向子类对象。
6.String、StringBuffer、StringBuilder区别
  String字符串常量，StringBuffer字符串变量（线程安全）、StringBuillder（非线程安全）。
  String为不可变的对象，每次进行改变时都会重新生成新的String对象，会影响JVM工作。而StringBuffer则不会，每次仅对本身进行操作。单线程操作使用StringBuilder，多线程操作使用StringBuffer.
7.什么是内部类？内部类的作用、设计意图？
  定义：在另外一个类里面的类。
  作用：内部类可以很好的实现隐藏；
  内部类拥有外围类的所有元素的访问权限；
  可以实现多重继承；
  可以避免修改接口而实现同一个两种同名方法的调用。
8.抽象类和接口的区别？抽象类的意义，抽象类与接口的应用场景，抽象类是否可以没有方法和属性，接口的意义。
  当你关注一个事物的本质的时候用抽象类，当你关注一个操作的时候用接口。
  抽象类和接口都不能被直接实例化，接口是对动作的抽象，而抽象类是对根源的抽象。
  抽象类要被子类继承，接口要被子类实现，抽象类里面可以没有抽象方法，如果一个类里面有抽象方法，那么这个类一定是抽象类，抽象类里面的方法都要被实现，抽象方法都要被重写。
  接口里面只能对方法进行声明，抽象类既可以对方法进行声明也可以对方法进行实现。BaseActivity抽象类，OnClickListener接口。
  接口泛指把自己提供给外界的一种抽象化物。
9.泛型中extends和super的区别
  <? extend T>限定参数类型的上界：参数类型必须是T或者T的子类型。
  <？ super T> 限定参数类型的下界：参数类型必须是T或T的超类型。
10.final,finally,finalize区别
  final用于修饰类、成员变量和成员方法，一旦初始化就不希望被修改。
  finally和try catch连用，保证不管有没有发生异常，资源都能够被释放。
  Finalized是object类中的一个方法，子类可以重写finalized方法实现对资源的回收。
11.Serializable和Parcelable的区别。
  Serializable是序列化的意思，表示将一个对象转换成可存储或可以传输的状态，序列化的对象可以在网络上进行传输，也可以存储在本地。
  Parcelable可以实现相同的效果。它的实现原理是将一个完整的对象进行分解，然后分解的每一个部分都是intent所支持的数据类型，这样就实现传递对象的功能。
  在使用内存的时候，Parceable比Serializable性能高，所以推荐使用Parcelable。
  Serializable在序列化的时候会产生大量的是临时变量，从而引起频繁的GC。
  Parcelable不能使用在要将数据存储在磁盘上的情况。因为Parcelable不能很好的的保存数据的持续性自外界有变化的情况下，尽管Serializable效率低，此时还是建议使用Serializable…
12.静态属性和静态方法是否可以被继承？是否可以被重写？
  静态属性、静态方法和非静态的属性都可以被继承和隐藏而不能被重写。因此不能实现多肽，不能实现父类的引用可以指向不同子类的对象。非静态方法可以被继承和重写，因此可以实现多肽。
13.静态类的设计意图
  如果内部类不会引用到外部类的东西的话，建议使用静态内部类，这样可以节省资源。静态内部类的使用对代码测试有非常重要的作用。
14.闭包和局部内部类的区别
  闭包：是一个可调用的对象，它记录了一些信息，这些信息来自于创建它的作用域。
15.static,final,static final区别
  Static修饰的属性强调它们只有一个，final修饰的属性表明是一个常数（创建后不能修改），static final修饰的属性表示一旦给值就不能修改，并且可以用过类名访问。